var views={init:function(){views.ui(),views.setImages(),$("form").length&&views.forms(),views.resize()},ui:function(){$(".switch a").click(function(){return $(".mailer__content").toggleClass("hidden"),!1})},setImages:function(){$(".img-load,.bg-load,.svg-load").each(function(){var a=!!$(this).hasClass("bg-load"),b=$(this).attr("class"),c=$(this).attr("data-src");$(this).removeClass("img-load bg-load svg-load");var d=$(this).attr("class");if(void 0!==c){if(c.indexOf("[width]")>-1){var e=1600;$(window).width()<1024&&(e=1024),$(window).width()<768&&(e=768),$(this).attr("data-src",c.replace("[width]",e))}if(a){var f=$(this);$("<img/>").attr("src",f.attr("data-src")).on("load",function(){$(this).remove(),f.css("background-image","url("+f.attr("data-src")+")")})}else if(b.indexOf("svg-load")>-1){var g=$(this),h=(g.attr("id"),g.attr("data-src"));$.get(h,function(a){var b=$(a).find("svg");b=b.attr("class",d),b=b.attr("data-src",h),b=b.removeAttr("xmlns:a"),!b.attr("viewBox")&&b.attr("height")&&b.attr("width")&&b.attr("viewBox","0 0 "+b.attr("height")+" "+b.attr("width")),g.replaceWith(b)},"xml")}else $(this).replaceWith('<img class="'+d+'" src="'+$(this).attr("data-src")+'" alt="'+$(this).attr("data-alt")+'">')}})},resize:function(){},forms:function(){$("form").submit(function(a){var b=$(this);if(!views.validateForms(b))return a.preventDefault(),!1;b.find(".error-text").hide(),b.addClass("form--loading");try{models.form(b.serialize(),b.attr("data-method")).success(function(a){controllers.form(a,b)}).fail(function(a){console.log(a.responseJSON.Message),b.find(".error-text").show(),b.removeClass("form--loading")})}catch(a){console.log(a),console.log("form post failed"),b.find(".error-text").show(),b.removeClass("form--loading")}a.preventDefault()}),$("body").on("change",".field--error input",function(){var a=$(this).parents("form");views.validateForms(a)})},validateForms:function(a){var b=!0;return a.find(".email").each(function(){!1===views.validateEmail($(this).val())?(b=!1,$(this).parents(".form__field").addClass("form__field--error").find(".validation").text("Email address is not valid")):$(this).parents(".form__field").removeClass("form__field--error").find(".validation").text("")}),a.find(".required").each(function(){""===$(this).val()?(b=!1,$(this).parents(".form__field").addClass("form__field--error").find(".validation").text("This field is required")):$(this).parents(".form__field").removeClass("form__field--error").find(".validation").text("")}),a.find(".phone").each(function(){!1===views.validatePhone($(this).val())?(b=!1,$(this).parents(".form__field").addClass("form__field--error").find(".validation").text("Telephone number is not valid")):$(this).parents(".form__field").removeClass("form__field--error").find(".validation").text("")}),a.find(".field--error").eq(0).find("input").focus(),b},validateEmail:function(a){return/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(a)},validatePhone:function(a){return/^[0-9]+$/.test(a)}},controllers={form:function(a,b){b.removeClass("form--loading"),console.log(a),"success"===a?b.addClass("form--loaded"):b.find(".error-text").show()}},models={form:function(a,b){return $.ajax({url:"/umbraco/api/DigitalGardenApi/"+b,type:"POST",context:document.body,data:a})}};views.init();